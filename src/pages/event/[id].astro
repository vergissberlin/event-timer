---
import Layout from '../../shared/Layout.astro';
import TimerScreen from '../../components/TimerScreen.astro';
import QrModal from '../../components/QrModal.astro';
import Footer from '../../components/Footer.astro';
import fs from 'node:fs';
import type { Event } from '../../types';

export async function getStaticPaths() {
  try {
    const url = new URL('../../../public/data/events.json', import.meta.url);
    const file = await fs.promises.readFile(url, 'utf-8');
    const data = JSON.parse(file);
    const events = Array.isArray(data?.events) ? data.events : [];
    return events.map((e: { id: string }) => ({ params: { id: e.id } }));
  } catch {
    return [];
  }
}
const { id } = Astro.params;

// Event-Daten laden
let currentEvent: Event | null = null;
try {
  const url = new URL('../../../public/data/events.json', import.meta.url);
  const file = await fs.promises.readFile(url, 'utf-8');
  const data = JSON.parse(file) as { events?: Event[] };
  const events = Array.isArray(data?.events) ? data.events : [];
  currentEvent = events.find((e) => e.id === id) ?? null;
} catch {}
---

<Layout title={currentEvent?.title ?? `Event ${id}`}>
  <div class="max-w-6xl mx-auto px-4 py-6">
    <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">{currentEvent?.title ?? `Event ${id}`}</h1>
    {currentEvent?.description && (
      <p class="mt-2 text-gray-600 dark:text-gray-400">{currentEvent.description}</p>
    )}
    {!currentEvent && (
      <p class="mt-2 text-red-600 dark:text-red-400">Event nicht gefunden.</p>
    )}
  </div>
  <div id="app">
    <TimerScreen />
  </div>
  <QrModal />
  <Footer />
  <script type="module">
    import '/src/main.ts';
  </script>
</Layout>


